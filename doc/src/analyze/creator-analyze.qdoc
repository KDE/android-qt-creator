/****************************************************************************
**
** This file is part of Qt Creator
**
** Copyright (c) 2011 Nokia Corporation and/or its subsidiary(-ies).
**
** Contact: Nokia Corporation (qt-info@nokia.com)
**
**
** GNU Free Documentation License
**
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of this
** file.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
**
****************************************************************************/

// **********************************************************************
// NOTE: the sections are not ordered by their logical order to avoid
// reshuffling the file each time the index order changes (i.e., often).
// Run the fixnavi.pl script to adjust the links to the index order.
// **********************************************************************

/*!
    \contentspage index.html
    \previouspage creator-troubleshooting-debugging.html
    \page creator-analyze-mode.html
    \nextpage creator-qml-performance-monitor.html

    \title Analyzing Code

    You can use the code analysis tools in the \gui Analyze mode. To switch to
    \gui Analyze mode, select \gui Analyze in the mode selector, or select the
    \gui {Analyze} menu and then select a tool. When you are in the
    \gui Analyze mode, you can switch between tools by selecting them in the
    menu on the toolbar.

    \image qtcreator-analyze-menu.png "Analyze mode menu"

    By default, the views in the \gui Analyze mode are locked into place in the
    workspace. Select \gui {Window > Views > Locked} to unlock the views. Drag
    and drop the views into new positions on the screen. Drag view borders to
    resize the views. The size and position of views are saved for future
    sessions. Select \gui {Window > Views > Reset to Default Layout} to reset
    the views to their original sizes and positions.

    You can use the following code analysis tools in the \gui Analyze mode:

    \list

        \o  \l{Profiling QML Applications}{QML Profiler}

            You can inspect binding evaluations, signal handling, and
            painting operations when running QML code. This is useful for
            identifying potential bottlenecks, especially in the evaluation
            of bindings.

        \o  \l{Using Valgrind Code Analysis Tools}{Valgrind Code Analysis Tools}

            You can detect problems in memory management by using the Memcheck
            tool and find cache misses in the code by using the Callgrind tool.

    \endlist

*/

