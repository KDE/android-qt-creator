/****************************************************************************
**
** This file is part of Qt Creator
**
** Copyright (c) 2011 Nokia Corporation and/or its subsidiary(-ies).
**
** Contact: Nokia Corporation (qt-info@nokia.com)
**
**
** GNU Free Documentation License
**
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of this
** file.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
**
****************************************************************************/

// **********************************************************************
// NOTE: the sections are not ordered by their logical order to avoid
// reshuffling the file each time the index order changes (i.e., often).
// Run the fixnavi.pl script to adjust the links to the index order.
// **********************************************************************

/*!
    \contentspage index.html
    \previouspage creator-project-managing-sessions.html
    \page creator-design-mode.html
    \nextpage creator-visual-editor.html

    \title Designing User Interfaces

    \image creator_designinguserinterface.png

    \QC provides two integrated visual editors, \QMLD and \QD. The integration
    includes project management and code completion.

    \list

        \o  \l{Developing Qt Quick Applications}

            You can either create Qt Quick projects from scratch or import
            existing projects to \QC. You can use the code editor (Edit mode)
            or the visual editor (Design mode) to develop Qt Quick applications.
        \o  \l{Developing Widget Based Applications}

            Widgets and forms created with \QD are integrated seamlessly with
            programmed code by using the Qt signals and slots mechanism that
            allows you to easily assign behavior to graphical elements. All
            properties set in \QD can be changed dynamically within the code.
            Furthermore, features such as widget promotion and custom
            plugins allow you to use your own widgets with \QD.
        \o  \l{Optimizing Applications for Mobile Devices}

            Mobile devices have been designed for use when mobile. Keep the
            characteristics of mobile devices in mind when you create
            applications for them.

    \endlist

    \section1 Related Topics

    \list

        \o  \l{Adding Qt Designer Plugins}

            You can use Qt APIs to create plugins that extend Qt applications.
            This enables you to add your own widgets to \QD.

    \endlist
*/
