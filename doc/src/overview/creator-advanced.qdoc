/****************************************************************************
**
** This file is part of Qt Creator
**
** Copyright (c) 2011 Nokia Corporation and/or its subsidiary(-ies).
**
** Contact: Nokia Corporation (qt-info@nokia.com)
**
**
** GNU Free Documentation License
**
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of this
** file.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
**
****************************************************************************/

// **********************************************************************
// NOTE: the sections are not ordered by their logical order to avoid
// reshuffling the file each time the index order changes (i.e., often).
// Run the fixnavi.pl script to adjust the links to the index order.
// **********************************************************************

/*!
    \contentspage index.html
    \previouspage creator-publishing-to-maemo-extras.html
    \page creator-advanced.html
    \nextpage creator-os-supported-platforms.html

    \title Advanced Use

    \image creator_advanceduse.png

    \QC attempts to meet your development needs, whether you are an
    experienced Qt developer or a newcomer to Qt. When you install \QC
    as a part of \QSDK, the default configuration allows you to start coding,
    building, running and debugging applications with very little effort.

    However, you can easily change or extend the default configuration, by
    choosing a different build system or integrating external tools.

    You can also use special options to start \QC from the command line and use
    it mainly from the keyboard.

    \list

        \o  \l{Supported Platforms}

            You can install and run \QC on several operating systems to create
            applications for multiple desktop and mobile device platforms.

        \o  \l{Using Other Build Systems}

            \QC is integrated with cross-platform systems for build automation:
            qmake and CMake. In addition, you can import generic projects that
            do not use qmake or CMake, and specify that \QC ignores your build
            system.

        \o  \l{Using Command Line Options}

            You can start \QC and specify some options for running it from the
            command line.

        \o  \l{Keyboard Shortcuts}

            \QC provides various keyboard shortcuts to speed up your development
            process. You can change the keyboard shortcuts, as well as import
            and export keyboard shortcut mapping schemes.

        \o  \l{Using External Tools}

            You can use external tools directly from \QC. Qt Linguist,
            QML Viewer, the default text editor for your system, and the \c sort
            tool are preconfigured for use. You can change their default
            configurations and configure new tools.

    \endlist

    \section1 Related Topics

    \list

        \o  \l{Showing Task List Files in Issues Pane}

            You can load report files created by code scanning and analysis
            tools to the \gui Issues output pane. You can navigate to the
            corresponding source code by clicking the error message.

    \endlist

*/
