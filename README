Qt Creator
==========
Qt Creator is a crossplatform C++ IDE for development with the Qt framework.

Supported Platforms
===================
The binary packages support the following platforms:

Windows XP SP2, Windows Vista
(K)Ubuntu Linux 7.04 32bit and 64bit
Mac OS 10.5 and later

Building the sources requires Qt 4.7.0 or later.

Compiling Qt Creator
====================
Prerequisites:
   * Qt 4.7
   * On Windows: mingw 4.4 or later, Visual Studio 2008 or later
   * On Mac: XCode 2.5 or later, compiling on 10.4 requires to set the
     environment variable QTC_TIGER_COMPAT before running qmake

We recommend that you build Qt Creator not in the source directory, but in a
separate directory. To do that, use the following commands:
mkdir $BUILD_DIRECTORY
cd $BUILD_DIRECTORY
qmake $SOURCE_DIRECTORY/qtcreator.pro
make (or mingw32-make or nmake or jom, depending on your platform)

QmlDesigner requires private headers from Qt 4.7.1
--------------------------------------------------

The QmlDesigner plugin depends on "private" headers from Qt 4.7.1, specifically from
the  QtDeclarative module. These private headers always end with an "_p.h", and Nokia
does not make any promises to keep the files or API's binary or source compatible
between releases. This means that when compiled, the plugin has a dependency to the
exact Qt version it was compiled with. Running Qt Creator with the plugin against
updated Qt libraries (also for patch releases) might lead to link time failures,
or even crashes.

If you want to disable the plugin, you can pass "QT_PRIVATE_HEADERS=" to qmake:

  qmake "QT_PRIVATE_HEADERS=" $SOURCE_DIRECTORY/qtcreator.pro

Anyhow, the plugin will not be compiled when the private header files needed
are not found. This might be the case when you are using a Qt version from your
distribution, or when you installed your self-compiled Qt to a separate
directory via 'make install'. You can fix this by either re-building your Qt
with the "-developer-build" configure option, or pass the include directory in
the source directory to qmake, e.g.

  qmake "QT_PRIVATE_HEADERS=$$QT_SOURCE_TREE/include" $SOURCE_DIRECTORY/qtcreator.pro


Third-party components
======================
Qt Creator includes the following third-party components,
we thank the authors who made this possible:

* Open Source front-end for C++ (license MIT), enhanced for use in Qt Creator

  Roberto Raggi <roberto.raggi@gmail.com>
  QtCreator/src/shared/cplusplus

* Botan, a C++ crypto library. Version 1.8.8

  Copyright (C) 1999-2004 The Botan Project. All rights reserved.
  Copyright (C) 1999-2009 Jack Lloyd
  2001 Peter J Jones
  2004-2007 Justin Karneges
  2005 Matthew Gregan
  2005-2006 Matt Johnston
  2006 Luca Piccarreta
  2007 Yves Jerschow
  2007-2008 FlexSecure GmbH
  2007-2008 Technische Universitat Darmstadt
  2007-2008 Falko Strenzke
  2007-2008 Martin Doering
  2007 Manuel Hartl
  2007 Christoph Ludwig
  2007 Patrick Sona
  All rights reserved.

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

  1. Redistributions of source code must retain the above copyright notice,
  this list of conditions, and the following disclaimer.

  2. Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions, and the following disclaimer in the documentation
  and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) "AS IS" AND ANY EXPRESS OR IMPLIED
  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, ARE DISCLAIMED. IN NO
  EVENT SHALL THE AUTHOR(S) OR CONTRIBUTOR(S) BE LIABLE FOR ANY DIRECT,
  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

  The source code of Botan C++ crypto library can be found in
  QtCreator/src/libs/3rdparty

* NetSieben SSH Library is a Secure Shell client library for C++. Version 1.3.2

  Commercial License: For organizations who do not want to release the source
  code for their applications as open source/ free software; in other words
  they do not want to comply with the GNU General Public License (GPL) or Q
  Public License.

  Non Commercial / Open Source License: NetSieben believes in contributing back
  to the open source community, thus it has released the SSH Library under Q
  Public License as it is defined by Trolltech AS of Norway. The Open Source
  License allows the user to use software under an open source / free software
  license, and distribute it freely. The software can be used at no charge with
  the condition that if the user uses the SSH Library in an application they
  wish to redistribute, then the complete source code for your application must
  be available and freely redistributable under reasonable conditions. For more
  information on the used QPL License see:
  QtCreator/src/libs/3rdparty/net7ssh/LICENSE.QPL

  The source code of NetSieben Secure Shell C++ Library can be found in
  QtCreator/src/libs/3rdparty.
